service: aws-ses-forwarder
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev

stackTags:
  service: ${self:service}
  deployuser: ${opt:deployuser}
  gitrepo: ${git:repository}
  giturl: ${opt:giturl}
  githash: ${git:sha1}
  gitmessage: ${git:message}
  gitbranch: ${git:branch}

functions:
  hello:
    handler: handler.hello

resources:
  Resources:
    S3Assets:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-assets 
        PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref 'S3Assets'
        PolicyDocument:
          Id: ${self:service}-wearetopcoder-s3-policy
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ses.amazonaws.com
              Action:
                - s3:PutObject
                - s3:GetObject
              Resource:
                - !Join ['', ['arn:aws:s3:::', !Ref 'S3Assets', "/*"]]
    SESReceiptRuleSet:
      Type: AWS::SES::ReceiptRuleSet
      Properties:
        RuleSetName: ${self:service}-${self:provider.stage}-wearetopcoder
    SESReceiptRule:
      Type: AWS::SES::ReceiptRule
      Properties:
        Rule:
          Actions:
            - S3Action:
                BucketName: ${self:service}-${self:provider.stage}-assets 
                ObjectKeyPrefix: smtp 
          Enabled: true
          Name: save-to-s3-trigger-lambda
          Recipients:
            - wearetopcoder.com
          ScanEnabled: true
          TlsPolicy: Require
        RuleSetName: ${self:service}-${self:provider.stage}-wearetopcoder
